#include <GL/glut.h>
#include <iostream>
#include <cmath>
using namespace std;

int ch = 0;
bool firstClick = false;
int xst, yst;

void displayPoints(int x, int y){
    glColor3f(0, 0, 0);
    glPointSize(2);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
    glFlush();  // Immediate rendering
}

void drawLine(int x1, int y1, int x2, int y2){
    int dx = abs(x2 - x1), dy = abs(y2 - y1);
    int xInc = (x2 > x1) ? 1 : -1;
    int yInc = (y2 > y1) ? 1 : -1;
    int err = dx - dy;

    while (true){
        displayPoints(x1, y1);
        if (x1 == x2 && y1 == y2) break;
        int e2 = 2 * err;
        if (e2 > -dy){ err -= dy; x1 += xInc; }
        if (e2 < dx){ err += dx; y1 += yInc; }
    }
}

void drawCircle(int xC, int yC, int r){
    int x = 0, y = r;
    int d = 3 - 2 * r;

    while (x <= y){
        displayPoints(xC + x, yC + y);
        displayPoints(xC - x, yC + y);
        displayPoints(xC + x, yC - y);
        displayPoints(xC - x, yC - y);
        displayPoints(xC + y, yC + x);
        displayPoints(xC - y, yC + x);
        displayPoints(xC + y, yC - x);
        displayPoints(xC - y, yC - x);
        if (d < 0) d += 4 * x + 6;
        else { d += 4 * (x - y) + 10; y--; }
        x++;
    }
}

void mouse(int button, int state, int x, int y){
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN){
        if (!firstClick){
            xst = x; yst = y;
            firstClick = true;
        }
        else{
            if (ch == 1){
                drawLine(xst, yst, x, y);
            }
            else if (ch == 2){
                int radius = sqrt((x - xst)*(x - xst) + (y - yst)*(y - yst));
                drawCircle(xst, yst, radius);
            }
            firstClick = false;
        }
    }
    else if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN){
        firstClick = false;
    }
}

void keyboard(unsigned char key, int x, int y){
    if (key == 'l') ch = 1;
    else if (key == 'c') ch = 2;
    glutMouseFunc(mouse);
}

void init(){
    glClearColor(1, 1, 1, 1);
    glClear(GL_COLOR_BUFFER_BIT);
    gluOrtho2D(0, 600, 600, 0);
    glFlush();
}

void display(){
    // Don’t clear — so existing drawings persist
    // glClear(GL_COLOR_BUFFER_BIT);  <-- DON'T DO THIS
    glFlush();
}

int main(int argc, char **argv){
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutCreateWindow("Bresenham Line and Circle");

    glMatrixMode(GL_PROJECTION);
    init();

    glutDisplayFunc(display);
    glutKeyboardFunc(keyboard);

    cout << "Press 'l' for Line, 'c' for Circle. Left-click to draw.\n";
    glutMainLoop();
    return 0;
}

